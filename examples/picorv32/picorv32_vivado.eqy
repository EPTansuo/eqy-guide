##############################################################
#
# Gold: PicoRV32 Original Verilog HDL
# Gate: Synthesis Output from Xilinx Vivado

[gold]
read_verilog picorv32.v
read_verilog init.v
prep -top testbench
sim -w -clock clk -resetn resetn -n 40
hierarchy -top picorv32

splitnets picorv32/cpu_state
memory_map
splitcells
clean

[gate]
logger -nowarn limited.support.for.tri-state.*/cells_sim.v
read_verilog -nowb -noblackbox +/xilinx/cells_sim.v
read_verilog picorv32_vivado.v
read_verilog init.v
prep -top testbench
uniquify; hierarchy
sim -w -clock clk -resetn resetn -n 40
rename testbench.uut picorv32
hierarchy -top picorv32

splitnets picorv32/cpu_state0_out
setundef -zero -undriven -init
flatten t:GND t:VCC t:OBUF t:IBUF
opt -noff -keepdc -fast
clean

##############################################################
#
# PicoRV32 Register File Outputs

[gold]
rename -hide picorv32/reg_op*
clean

[gate]
rename -hide picorv32/pcpi_rs?_OBUF*
clean

[match picorv32]
gold-match pcpi_rs[12]

[collect picorv32]
solo-group pcpi_rs[12]


##############################################################
#
# Vivado weirdly renames the CPU state FSM register:
#     cpu_state0_out[*]       the value before the FF, i.e. the next state
#     cpu_state_reg_n_0_[*]   the value after the FF, i.e. cpu_state
# except bits 4 and 6, as bit 4 encodes the unused "ld_rs2" state,
# and bit 6 (encoding for "fetch") ended up as 1-bit reg_next_pc wire.

[match picorv32]
gold-match cpu_state[0] cpu_state_reg_n_0_[0]
gold-match cpu_state[1] cpu_state_reg_n_0_[1]
gold-match cpu_state[2] cpu_state_reg_n_0_[2]
gold-match cpu_state[3] cpu_state_reg_n_0_[3]
gold-match cpu_state[4] cpu_state0_out[4]
gold-match cpu_state[5] cpu_state_reg_n_0_[5]
gold-match cpu_state[6] reg_next_pc
gold-match cpu_state[7] cpu_state_reg_n_0_[7]


##############################################################
#
# False Equivalent Points
# .. identified via picorv32_vivado/modules/picorv32.sby with
# with CHECK_MATCH_POINTS enabled.

[match picorv32]
gold-nomatch count_instr
gold-nomatch decoded_imm_j
gold-nomatch decoder_pseudo_trigger
gold-nomatch latched_branch
gold-nomatch latched_is_lu
gold-nomatch latched_store
gold-nomatch mem_do_prefetch
gold-nomatch mem_rdata_word
gold-nomatch mem_state
gold-nomatch mem_wordsize
gold-nomatch reg_next_pc
gold-nomatch reg_out
gold-nomatch reg_sh


##############################################################
#
# Partitioning and Strategies

[collect picorv32]
solo-join trace_valid
solo-join pcpi_valid
solo-join eoi
solo-join cpuregs_wrdata
solo-join decoded_*
solo-join /(instr|is)_.*/
solo-join latched_rd
solo-join mem_*
solo-join pcpi_insn
solo-join trace_data
solo-join alu_*

[partition picorv32]

# passing
name trivial eoi
name trivial trace_data
name trivial trace_valid
name trivial pcpi_valid
name trivial mem_xfer
final eoi

# passing
name is_passing is_sltiu_bltu_sltu
name is_passing is_slti_blt_slt
name is_passing is_rdcycle_rdcycleh_rdinstr_rdinstrh
name is_passing is_lui_auipc_jal
name is_passing is_lbu_lhu_lw
final is_lbu_lhu_lw

# passing
merge alu_*
final pcpi_insn

# failing
merge is_*
merge instr_*
merge mem_*
merge decoded_*

# more failing
# - cpuregs_wrdata
# - latched_rd
# - pcpi_rs1
# - trap

[partition picorv32]
#ramend * pcpi_rs[12]
#noamend *

[strategy sby]
use sby
depth 10
engine smtbmc bitwuzla

[strategy pdr]
use sby
engine abc pdr
